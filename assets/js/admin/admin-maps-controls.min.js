/**
 *  Maps Directions
 *
 *  @description: Adds directions functionality to the maps builder
 *  @copyright: http://opensource.org/licenses/gpl-2.0.php GNU Public License
 *  @since: 2.0
 */
var gmb_data,gmb_upload_marker,trafficLayer=new google.maps.TrafficLayer,transitLayer=new google.maps.TransitLayer,bicycleLayer=new google.maps.BicyclingLayer,placeSearchAutocomplete;!function(e){"use strict";/**
	 * Set Map Layers
	 *
	 * @description Toggles various layers on and off
	 * @param layer obj
	 */
function o(e){if(!e)return!1;var o=e.val(),a=e.prop("checked");switch(o){case"traffic":trafficLayer.setMap(a?window.map:null);break;case"transit":transitLayer.setMap(a?window.map:null);break;case"bicycle":bicycleLayer.setMap(a?window.map:null)}}/**
	 * Toggle Places Search Field
	 * @descrition: Adds and removes the places search field from the map preview
	 * @param input
	 */
function a(o){
//Setup search or Toggle show/hide?
"undefined"==typeof placeSearchAutocomplete&&o.prop("checked")===!0?(t(),//hasn't been setup yet, so set it up
e("#places-search").show()):o.prop("checked")===!0&&"object"==typeof placeSearchAutocomplete?e("#places-search").show():e("#places-search").hide()}/**
	 * Set up Places Search Field
	 *
	 * @description Creates the Google Map custom control with autocomplete enabled
	 *
	 */
function t(){
// Sets a listener on a radio button to change the filter type on Places
// Autocomplete.
function e(e,o){var a=document.getElementById(e);google.maps.event.addDomListener(a,"click",function(){placeSearchAutocomplete.setTypes(o)})}{var o=/** @type {HTMLInputElement} */document.getElementById("pac-input");document.getElementById("type-selector")}map.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById("places-search")),placeSearchAutocomplete=new google.maps.places.Autocomplete(o),placeSearchAutocomplete.bindTo("bounds",map);var a=new google.maps.InfoWindow,t=new google.maps.Marker({map:map,anchorPoint:new google.maps.Point(0,-29)});google.maps.event.addListener(placeSearchAutocomplete,"place_changed",function(){a.close(),t.setVisible(!1);var e=placeSearchAutocomplete.getPlace();if(!e.geometry)return void window.alert("Autocomplete's returned place contains no geometry");
// If the place has a geometry, then present it on a map.
e.geometry.viewport?map.fitBounds(e.geometry.viewport):(map.setCenter(e.geometry.location),map.setZoom(17)),t.setIcon(/** @type {google.maps.Icon} */{url:e.icon,size:new google.maps.Size(71,71),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(17,34),scaledSize:new google.maps.Size(35,35)}),t.setPosition(e.geometry.location),t.setVisible(!0);var o="";e.address_components&&(o=[e.address_components[0]&&e.address_components[0].short_name||"",e.address_components[1]&&e.address_components[1].short_name||"",e.address_components[2]&&e.address_components[2].short_name||""].join(" ")),a.setContent("<div><strong>"+e.name+"</strong><br>"+o),a.open(map,t)}),e("changetype-all",[]),e("changetype-address",["address"]),e("changetype-establishment",["establishment"]),e("changetype-geocode",["geocode"]),
//Tame the enter key to not save the widget while using the autocomplete input
google.maps.event.addDomListener(o,"keydown",function(e){13==e.keyCode&&e.preventDefault()})}/**
	 * Kick it off on Window Load
	 */
e(window).on("load",function(){
//Layers
e(".cmb2-id-gmb-layers input").on("change",function(){o(e(this))}),
//Loop through layers
e(".cmb2-id-gmb-layers input:checkbox").each(function(){o(e(this))});
//Places Search
var t=e(".cmb2-id-gmb-places-search input");t.on("change",function(){a(e(this))}),a(t),
//Initialize Magnific/Modal Functionality Too
e("body").on("click",".gmb-magnific-inline",function(o){o.preventDefault();var a="."+e(this).data("target");//target element class name
//Modal in modal?
//We can't have a magnific inside magnific so CSS3 modal it is
e.magnificPopup.instance.isOpen===!0?(console.log(a),
//Open CSS modal
e(a).before('<div class="modal-placeholder"></div>').removeClass("mfp-hide").appendTo(".magnific-builder #poststuff"),// Move the element to container
//Add close functionality
e(a).on("click",function(o){
//only on overlay
e(o.target).hasClass("white-popup")&&
// Move back out of container
e(this).addClass("mfp-hide").appendTo(".modal-placeholder").unwrap()}),
//Close button
e(".gmb-modal-close").on("click",function(){e(a).addClass("mfp-hide").appendTo(".modal-placeholder").unwrap()})):e.magnificPopup.open({items:{src:e(a),type:"inline"},midClick:!0})}),
//Custom marker modal uploader
gmb_upload_marker={
// Call this from the upload button to initiate the upload frame.
uploader:function(){
//@TODO: i18n
var e=wp.media({title:"Set an Custom Marker Icon",multiple:!1,library:{type:"image"},button:{text:"Set Marker"}});
// Handle results from media manager.
return e.on("close",function(){var o=e.state().get("selection").toJSON();gmb_upload_marker.render(o[0])}),e.open(),!1},
// Output Image preview
render:function(o){e(".gmb-image-preview").prepend(gmb_upload_marker.imgHTML(o)),e(".gmb-image-preview").html(gmb_upload_marker.imgHTML(o)),e(".gmb-image-preview").show(),e(".save-marker-icon").slideDown(),//slide down save button
e(".save-marker-button").data("marker-image",o.url)},
// Render html for the image.
imgHTML:function(e){var o='<img src="'+e.url+'" ';return o+='width="'+e.width+'" ',o+='height="'+e.height+'" ',""!=e.alt&&(o+='alt="'+e.alt+'" '),o+="/>"},
// User wants to remove the avatar
removeImage:function(o){e("#"+o+"attachment_id").val(""),e("#"+o+"imageurl").val(""),e("#"+o+"preview img").remove(),e("#"+o+"preview a").hide()}}})}(jQuery);